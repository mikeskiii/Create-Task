# Global Variables
#game board
board = ["-", "-", "-", 
        "-", "-", "-", 
        "-", "-", "-"]

# if game is active
game_still_going = True

#Is there a winner? Game tie?
winner = None

#Who's active player?
active_player = "X"

def display_board():
    print(board[0] + " | " + board[1] + " | " + board[2])
    print(board[3] + " | " + board[4] + " | " + board[5])
    print(board[6] + " | " + board[7] + " | " + board[8])


def play_game():

    #show board
  display_board

  while game_still_going:

    handle_turn(active_player)

    check_if_game_over()

    flip_player()

 #game ended
  if winner == "X" or winner == "O":
   print (winner + "won.")
  elif winner == None:
    print("Tie.")


def handle_turn(player):

  print(player + "'s turn.'")
  position = input("Select from positions 1-9: ")

  valid = False
  while not valid:

   while position not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]:
     position = input("Invalid. Select from positions 1-9: ")
  position = int(position) - 1

  if board [position] == "-":
    valid = True
  else:
      print ("Taken. Please go again.")

  board[position] = player
  display_board()

def check_if_game_over():
  check_if_win()
  check_if_tie()

def check_if_win():

#set up of global variable
  global winner
  # check rows
  row_winner = check_rows
  # check columns
  column_winner = check_columns
  # check diagonals
  diagonal_winner = check_diagonals
  if row_winner:
    winner = row_winner
  elif column_winner:
    winner = column_winner
  elif diagonal_winner:
      winner = diagonal_winner
  else:
      winner = None
  return

def check_rows():
  # introduce global variable
  global game_still_going
  #check for row values
  row_1 = board[0] == board[1] == board[2] != "-"
  row_2 = board[3] == board[4] == board[5] != "-"
  row_3 = board[6] == board[7] == board[8] != "-"
  #flag for win if rows have a match
  if row_1 or row_2 or row_3:
    game_still_going = False
  #return winner (X or O)
  if row_1:
    return board[0]
  elif row_2:
    return board[3]
  elif row_3:
    return board[6]
  return
  

def check_columns():
    # introduce global variable
  global game_still_going
  #check for column values
  column_1 = board[0] == board[3] == board[6] != "-"
  column_2 = board[1] == board[4] == board[7] != "-"
  column_3 = board[2] == board[5] == board[8] != "-"
  #flag for win if column have a match
  if column_1 or column_2 or column_3:
    game_still_going = False
  #return winner (X or O)
  if column_1:
    return board[0]
  elif column_2:
    return board[1]
  elif column_3:
    return board[2]
  return

def check_diagonals():
     # introduce global variable
  global game_still_going
  #check for diagonals values
  diagonals_1 = board[0] == board[4] == board[8] != "-"
  diagonals_2 = board[6] == board[4] == board[2] != "-"
  #flag for win if diagonals have a match
  if diagonals_1 or diagonals_2:
    game_still_going = False
  #return winner (X or O)
  if diagonals_1:
    return board[0]
  elif diagonals_2:
    return board[1]
  return


def check_if_tie():
  global game_still_going
  if "-" not in board:
    game_still_going = False

  return


def flip_player():
  #necessary global variables
  global current_player
  # if X turn to O
  if current_player == "X":
    current_player = "O"
  # if O turn to X
  elif current_player == "O":
    current_player = "X"
